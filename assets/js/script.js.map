{"version":3,"sources":["script.js"],"names":["select","el","all","trim","document","querySelectorAll","querySelector","onscroll","listener","addEventListener","preloader","window","remove","selectHeader","headerScrolled","scrollY","classList","add","backtotop","toggleBacktotop"],"mappings":"CAOA,WACA,aAKA,MAAAA,EAAA,CAAAC,EAAAC,GAAA,KACAD,EAAAA,EAAAE,OACAD,EACA,IAAAE,SAAAC,iBAAAJ,IAEAG,SAAAE,cAAAL,IAqBAM,EAAA,CAAAN,EAAAO,KACAP,EAAAQ,iBAAA,SAAAD,EAAA,EAwBA,IAAAE,EAAAV,EAAA,cACAU,GACAC,OAAAF,iBAAA,QAAA,KACAC,EAAAE,QAAA,IAOA,IAAAC,EAAAb,EAAA,WACA,GAAAa,EAAA,CACA,MAAAC,EAAA,KACAH,OAAAI,QAAA,IACAF,EAAAG,UAAAC,IAAA,mBAEAJ,EAAAG,UAAAJ,OAAA,kBACA,EAEAD,OAAAF,iBAAA,OAAAK,GACAP,EAAAH,SAAAU,EACA,CAKA,IAAAI,EAAAlB,EAAA,gBACA,GAAAkB,EAAA,CACA,MAAAC,EAAA,KACAR,OAAAI,QAAA,IACAG,EAAAF,UAAAC,IAAA,UAEAC,EAAAF,UAAAJ,OAAA,SACA,EAEAD,OAAAF,iBAAA,OAAAU,GACAZ,EAAAH,SAAAe,EACA,CAEA,CAhGA","file":"script.js","sourcesContent":["/**\r\n* Template Name: Multi\r\n* Updated: Mar 10 2023 with Bootstrap v5.2.3\r\n* Template URL: https://bootstrapmade.com/multi-responsive-bootstrap-template/\r\n* Author: BootstrapMade.com\r\n* License: https://bootstrapmade.com/license/\r\n*/\r\n(function() {\r\n  \"use strict\";\r\n\r\n  /**\r\n   * Easy selector helper function\r\n   */\r\n  const select = (el, all = false) => {\r\n    el = el.trim()\r\n    if (all) {\r\n      return [...document.querySelectorAll(el)]\r\n    } else {\r\n      return document.querySelector(el)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Easy event listener function\r\n   */\r\n  const on = (type, el, listener, all = false) => {\r\n    let selectEl = select(el, all)\r\n    if (selectEl) {\r\n      if (all) {\r\n        selectEl.forEach(e => e.addEventListener(type, listener))\r\n      } else {\r\n        selectEl.addEventListener(type, listener)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Easy on scroll event listener \r\n   */\r\n  const onscroll = (el, listener) => {\r\n    el.addEventListener('scroll', listener)\r\n  }\r\n\r\n  /**\r\n   * Scrolls to an element with header offset\r\n   */\r\n  const scrollto = (el) => {\r\n    let header = select('#header')\r\n    let offset = header.offsetHeight\r\n\r\n    if (!header.classList.contains('header-scrolled')) {\r\n      offset -= 16\r\n    }\r\n\r\n    let elementPos = select(el).offsetTop\r\n    window.scrollTo({\r\n      top: elementPos - offset,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Preloader\r\n   */\r\n  let preloader = select('#preloader');\r\n  if (preloader) {\r\n    window.addEventListener('load', () => {\r\n      preloader.remove()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle .header-scrolled class to #header when page is scrolled\r\n   */\r\n  let selectHeader = select('#header')\r\n  if (selectHeader) {\r\n    const headerScrolled = () => {\r\n      if (window.scrollY > 100) {\r\n        selectHeader.classList.add('header-scrolled')\r\n      } else {\r\n        selectHeader.classList.remove('header-scrolled')\r\n      }\r\n    }\r\n    window.addEventListener('load', headerScrolled)\r\n    onscroll(document, headerScrolled)\r\n  }\r\n\r\n  /**\r\n   * Back to top button\r\n   */\r\n  let backtotop = select('.back-to-top')\r\n  if (backtotop) {\r\n    const toggleBacktotop = () => {\r\n      if (window.scrollY > 100) {\r\n        backtotop.classList.add('active')\r\n      } else {\r\n        backtotop.classList.remove('active')\r\n      }\r\n    }\r\n    window.addEventListener('load', toggleBacktotop)\r\n    onscroll(document, toggleBacktotop)\r\n  }\r\n\r\n})();"]}